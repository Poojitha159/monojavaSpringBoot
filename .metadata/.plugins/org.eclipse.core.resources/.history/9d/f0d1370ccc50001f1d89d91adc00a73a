package com.techlabs.app.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.techlabs.app.entity.Course;
import com.techlabs.app.entity.Instructor;
import com.techlabs.app.repository.CourseRepository;
import com.techlabs.app.repository.InstructorRepository;

import jakarta.transaction.Transactional;

@Service
public class InstructorServiceImpl implements InstructorService{

	private InstructorRepository 	instructorRepository;
	private CourseRepository 	courseRepository;
	public InstructorServiceImpl(InstructorRepository instructorRepository, CourseRepository courseRepository) {
		super();
		this.instructorRepository = instructorRepository;
		this.courseRepository = courseRepository;
	}
	@Override
	public List<Instructor> findAllInstructors() {
		
		return instructorRepository.findAll();
	}
	@Override
	public Instructor saveInstructor(Instructor instructor) {

	return instructorRepository.save(instructor);
	}
	
	@Override
	public Instructor getInstructorByid(int id) {
				return instructorRepository.findById(id).orElse(null);
	}
	@Override
	public void deleteById(Instructor instructor) {
		instructorRepository.delete(instructor);
		
	}
	@Override
	public Course addCourseToInstructor(int id, Course course) {
		Optional<Instructor> i=instructorRepository.findById(id);
		if(i.isPresent()) {
			Instructor instructor = i.get();
			course.setInstructor(instructor);
			return courseRepository.save(course);
		}
		return null;
	}
	@Override
	@Transactional
    public boolean removeCourseFromInstructor(int instructorId, int courseId) {
        Optional<Instructor> optionalInstructor = instructorRepository.findById(instructorId);
        Optional<Course> optionalCourse = courseRepository.findById(courseId);

        if (optionalInstructor.isPresent() && optionalCourse.isPresent()) {
            Course course = optionalCourse.get();
            if (course.getInstructor() != null && course.getInstructor().getId() == instructorId) {
                course.setInstructor(null);
                courseRepository.save(course);
                return true;
            }
        }
        return false;
    }
	
	

}
