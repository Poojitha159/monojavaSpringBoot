package com.techlabs.app.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.techlabs.app.dto.BlogDTO;
import com.techlabs.app.dto.CommentDTO;
import com.techlabs.app.entity.Blog;
import com.techlabs.app.entity.Comment;
import com.techlabs.app.exception.ResourceNotFoundException;
import com.techlabs.app.repository.CommentRepository;

@Service

public class CommentServiceImpl implements CommentService{
	
	private CommentRepository commentRepository;

	public CommentServiceImpl(CommentRepository commentRepository) {
		super();
		this.commentRepository = commentRepository;
	}

	@Override
	public List<CommentDTO> getAllComments() {
		return commentRepository.findAll()
        		.stream()
        		.map(this::convertToDTO)
        		.collect(Collectors.toList());
		
	}

	@Override
	public CommentDTO getCommentById(int id) {
		Comment comment=commentRepository.findById(id)
		.orElseThrow(() -> new ResourceNotFoundException("Comment not found with id " + id));
        return convertToDTO(comment);
		return null;
	}

	

	@Override
	public CommentDTO createComment(CommentDTO commentDTO) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CommentDTO updateComment(int id, CommentDTO commentDTO) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deleteComment(int id) {
		// TODO Auto-generated method stub
		
	}

	private CommentDTO convertToDTO(Comment comment ) {
		CommentDTO commentDTO = new CommentDTO();
       
		commentDTO.setId(comment.getId());
		commentDTO.setDescription(comment.getDescription());
		commentDTO.setBlogId(comment.getBlog().getId());
        
        
        return commentDTO;
    }

    
}
