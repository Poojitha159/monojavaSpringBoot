package com.techlabs.app.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.techlabs.app.entity.Employee;
import com.techlabs.app.service.EmployeeService;

@RestController
@RequestMapping("/employees")
public class EmployeeController {
	
	private EmployeeService employeeService;

	@Autowired
	public EmployeeController(EmployeeService employeeService) {
		super();
		this.employeeService = employeeService;
	}
	@GetMapping("/name/{name}")
	public ResponseEntity<Optional<Employee>> getEmployeeByName(@PathVariable String name){
		return ResponseEntity.ok(employeeService.findByName(name));
		
	}
	
	@GetMapping("/email/{email}")
	public ResponseEntity<Optional<Employee>> getEmployeeByEmail(@PathVariable String email){
		return ResponseEntity.ok(employeeService.findByEmail(email));
		
	}
	
	@GetMapping("/active")
    public ResponseEntity<List<Employee>> getAllActiveEmployees() {
        return ResponseEntity.ok(employeeService.findAllActive());
    }

    @GetMapping("/name-starts-with-s")
    public ResponseEntity<List<Employee>> getEmployeesNameStartingWithS() {
        return ResponseEntity.ok(employeeService.findByNameStartingWithS());
    }

    @GetMapping("/salary/{salary}/department/{department}")
    public ResponseEntity<List<Employee>> getEmployeesBySalaryAndDepartment(@PathVariable double salary, @PathVariable String department) {
        return ResponseEntity.ok(employeeService.findBySalaryGreaterThanAndDepartment(salary, department));
    }

    @GetMapping("/salary-range")
    public ResponseEntity<List<Employee>> getEmployeesBySalaryRange(@RequestParam double minSalary, @RequestParam double maxSalary) {
        return ResponseEntity.ok(employeeService.findBySalaryBetween(minSalary, maxSalary));
    }

    @GetMapping("/active-and-salary-greater-than/{salary}")
    public ResponseEntity<List<Employee>> getActiveEmployeesWithSalaryGreaterThan(@PathVariable double salary) {
        return ResponseEntity.ok(employeeService.findAllActiveAndSalaryGreaterThan(salary));
    }

    @GetMapping("/count-active")
    public ResponseEntity<Long> countActiveEmployees() {
        return ResponseEntity.ok(employeeService.countActiveEmployees());
    }


}
